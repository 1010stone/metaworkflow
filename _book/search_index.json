[
["demo.html", "Chapter 9 Demo 9.1 Project Setup 9.2 Data input 9.3 Find the peaks 9.4 Data correction 9.5 Statistic analysis 9.6 Annotation 9.7 Omics analysis 9.8 MetaboAnalyst 9.9 Visulizing Peaks 9.10 Optimation of XCMS 9.11 Summary", " Chapter 9 Demo 9.1 Project Setup I suggest building your data analysis projects in RStudio(Click File - New project - New dictionary - Empty project). Then assign a name for your project. I also recommend the following tips if you are familiar with it. Use git/github to make version control of your code and sync your project online. NOT use your name for your project because other peoples might cooperate with you and someone might check your data when you publish your papers. Each project should be a work for one paper or one chapter in your thesis. Use workflow document(txt or doc) in your project to record all of the steps and code you performed for this project. Treat this document as digital version of your experiment notebook Use data folder in your project folder for the raw data and the results you get in data analysis Use figure folder in your project folder for the figure Use munuscript folder in your project folder for the manuscript (you could write paper in rstudio with the help of template in Rmarkdown) Just double click [yourprojectname].Rproj to start your project 9.2 Data input xcms does not support all of the Raw files from every mass spectrometry manufacturers. You need to convert your Raw data into some open-source data format such as mzData, mzXML or CDF files. The tool is MScovert from ProteoWizard. Here is a demo: # install the packages for data analysis and # source(&quot;https://bioconductor.org/biocLite.R&quot;) # biocLite(c(&quot;multtest&quot;,&quot;faahKO&quot;,&quot;xcms&quot;,&quot;qvalue&quot;,&quot;CAMERA&quot;)) # load the functions and dataset for demo library(multtest) library(xcms) library(faahKO) library(BiocParallel) # get the demo data in faahKO packages cdfpath &lt;- system.file(&quot;cdf&quot;,package = &quot;faahKO&quot;) # show the name of demo data list.files(cdfpath,recursive = T) ## [1] &quot;KO/ko15.CDF&quot; &quot;KO/ko16.CDF&quot; &quot;KO/ko18.CDF&quot; &quot;KO/ko19.CDF&quot; &quot;KO/ko21.CDF&quot; ## [6] &quot;KO/ko22.CDF&quot; &quot;WT/wt15.CDF&quot; &quot;WT/wt16.CDF&quot; &quot;WT/wt18.CDF&quot; &quot;WT/wt19.CDF&quot; ## [11] &quot;WT/wt21.CDF&quot; &quot;WT/wt22.CDF&quot; Here is a demo for xcmsSet: cdffiles &lt;- list.files(cdfpath, recursive = TRUE, full.names = TRUE) xset &lt;- xcmsSet(cdffiles,BPPARAM=SnowParam()) xset ## An &quot;xcmsSet&quot; object with 12 samples ## ## Time range: 2506.1-4147.7 seconds (41.8-69.1 minutes) ## Mass range: 200.1-599.3338 m/z ## Peaks: 4721 (about 393 per sample) ## Peak Groups: 0 ## Sample classes: KO, WT ## ## Peak picking was performed on MS1. ## Profile settings: method = bin ## step = 0.1 ## ## Memory usage: 0.714 MB 9.3 Find the peaks The first step to process the MS data is that find the peaks against the noises. In xcms, all of related staffs are handled by xcmsSet function. For any functions in xcms or R, you could get their documents by type ? before certain function. Another geek way is input the name of the function in the console of Rstudio and press F1 for help. ?xcmsSet In the document of xcmsset, we could set the sample classes, profmethod, profparam, polarity,etc. In the online version, such configurations are shown in certain windows. In the local analysis environment, such parameters are setup by yourselves. However, I think the default configurations could satisfied most of the analysis because related information should have been recorded in your Raw data and xcms could find them. All you need to do is that show the data dictionary for xcmsSet. If your data have many groups such as control and treated group, just put them in separate subfolder of the data folder and xcmsSet would read them as separated groups. The output was an object with class of xcmsSet. You could see a summary by type the name. In this cases, xcmsSet found 4721 peaks with time range 41.8-69.1 min and mass range 200.1-599.3338 m/z in the 12 samples. Another function which might be useful is group. This function will add additional information about the same analytes for xcmsSet objects. xset &lt;- group(xset) ## 262 325 387 450 512 575 xset ## An &quot;xcmsSet&quot; object with 12 samples ## ## Time range: 2506.1-4147.7 seconds (41.8-69.1 minutes) ## Mass range: 200.1-599.3338 m/z ## Peaks: 4721 (about 393 per sample) ## Peak Groups: 403 ## Sample classes: KO, WT ## ## Peak picking was performed on MS1. ## Profile settings: method = bin ## step = 0.1 ## ## Memory usage: 0.777 MB Now you see there are 403 groups in the demo data, which meant 403 analytes are found across 4721 peaks. 9.4 Data correction Reasons of data correction might come from many aspects such as the unstable instrument and pollution on column. In xcms, the most important correction is retention time correction. Remember the original retention time might changed and use another object to save the new object: xset2 &lt;- retcor(xset, method = &quot;obiwarp&quot;) ## center sample: ko16 ## Processing: ko15 ko18 ko19 ko21 ko22 wt15 wt16 wt18 wt19 wt21 wt22 xset2 ## An &quot;xcmsSet&quot; object with 12 samples ## ## Time range: 2506.3-4162.2 seconds (41.8-69.4 minutes) ## Mass range: 200.1-599.3338 m/z ## Peaks: 4721 (about 393 per sample) ## Peak Groups: 0 ## Sample classes: KO, WT ## ## Peak picking was performed on MS1. ## Profile settings: method = bin ## step = 0.1 ## ## Memory usage: 0.714 MB # you need group the peaks again for this corrected data xset2 &lt;- group(xset2) ## 262 325 387 450 512 575 xset2 ## An &quot;xcmsSet&quot; object with 12 samples ## ## Time range: 2506.3-4162.2 seconds (41.8-69.4 minutes) ## Mass range: 200.1-599.3338 m/z ## Peaks: 4721 (about 393 per sample) ## Peak Groups: 404 ## Sample classes: KO, WT ## ## Peak picking was performed on MS1. ## Profile settings: method = bin ## step = 0.1 ## ## Memory usage: 0.777 MB You see one more peak groups after the correction. After the retention time correction, we also need to correct the peak groups by filling the missing peaks. Such function calls fillpeaks: xset3 &lt;- fillPeaks(xset2,BPPARAM=SnowParam()) xset3 ## An &quot;xcmsSet&quot; object with 12 samples ## ## Time range: 2502.9-4162.2 seconds (41.7-69.4 minutes) ## Mass range: 200.1-599.3338 m/z ## Peaks: 6054 (about 504 per sample) ## Peak Groups: 404 ## Sample classes: KO, WT ## ## Peak picking was performed on MS1. ## Profile settings: method = bin ## step = 0.1 ## ## Memory usage: 0.918 MB You see more peaks found. 9.5 Statistic analysis Right now we get peaks across samples, the next step is finding the differences between two groups. You will find the P values of t-test for pairwise comparison: reporttab &lt;- diffreport(xset3, &quot;WT&quot;, &quot;KO&quot;, &quot;example&quot;) reporttab[1:3,] ## name fold tstat pvalue mzmed mzmin mzmax ## 1 M300T3391 5.693594 14.44368 5.026336e-08 300.1898 300.1706 300.2000 ## 2 M301T3391 6.283030 15.52501 5.385022e-08 301.1879 301.1659 301.1949 ## 3 M298T3185 3.984984 11.88773 3.615841e-07 298.1508 298.1054 298.1592 ## rtmed rtmin rtmax npeaks KO WT ko15 ko16 ko18 ## 1 3390.699 3374.142 3398.743 12 6 6 4534353.6 4980914.5 5290739.1 ## 2 3391.126 3385.366 3394.937 7 6 1 962353.4 1047934.1 1109303.0 ## 3 3185.221 3182.083 3190.163 4 4 0 180780.8 204134.9 191015.9 ## ko19 ko21 ko22 wt15 wt16 wt18 wt19 ## 1 4564262.9 4733236.1 3931592.6 349660.89 491793.18 645526.70 634108.85 ## 2 946943.4 984787.2 806171.5 80639.28 118940.90 134531.39 102784.65 ## 3 190626.8 155276.9 220288.6 16448.42 41050.04 50082.55 76704.81 ## wt21 wt22 ## 1 1438254.45 1364627.84 ## 2 203982.76 291392.97 ## 3 53957.78 48363.33 Now you have got the ions that varies a lot between groups. Such ions are things we should take care of. In a ideal case, this is the endpoint of your study and the left work is making a report of your finding. However,we need q-values to control FDR. To get the q-values, you need input p-values and use the function from qvalue package. library(qvalue) # extract the p-value to caculate q-value qvalue &lt;- qvalue(p=reporttab$pvalue) # add qvalue to reporttab reporttab$qvalue &lt;- qvalue$qvalues # reporttab[1:3,] For further information about q-value, check here. After the FDR control, the following steps depend on your study. 9.6 Annotation I suggest CAMERA package to handle this task. You need to prepare an object of class xcmsSet, for example, xset3(remember to use fillpeaks to get the ions group). library(CAMERA) # Create an xsAnnotate object xsa &lt;- xsAnnotate(xset3) # Group after RT value of the xcms grouped peak xsaF &lt;- groupFWHM(xsa, perfwhm=0.6) ## Start grouping after retention time. ## Created 132 pseudospectra. # Verify grouping xsaC &lt;- groupCorr(xsaF) ## Start grouping after correlation. ## Generating EIC&#39;s .. ## ## Calculating peak correlations in 132 Groups... ## % finished: 10 20 30 40 50 60 70 80 90 100 ## ## Calculating graph cross linking in 132 Groups... ## % finished: 10 20 30 40 50 60 70 80 90 100 ## New number of ps-groups: 202 ## xsAnnotate has now 202 groups, instead of 132 # Annotate isotopes, could be done before groupCorr xsaFI &lt;- findIsotopes(xsaC) ## Generating peak matrix! ## Run isotope peak annotation ## % finished: 10 20 30 40 50 60 70 80 90 100 ## Found isotopes: 57 # Annotate adducts xsaFA &lt;- findAdducts(xsaFI, polarity=&quot;positive&quot;) ## Generating peak matrix for peak annotation! ## ## Calculating possible adducts in 202 Groups... ## % finished: 10 20 30 40 50 60 70 80 90 100 # See the results getPeaklist(xsaFA)[1:3,] ## mz mzmin mzmax rt rtmin rtmax npeaks KO WT ## 1 200.1000 200.1000 200.1000 2924.027 2876.967 2939.450 9 4 5 ## 2 205.0000 205.0000 205.0000 2788.377 2782.719 2795.550 12 6 6 ## 3 205.9927 205.9786 206.0023 2789.144 2782.719 2793.925 12 6 6 ## ko15 ko16 ko18 ko19 ko21 ko22 wt15 ## 1 147887.5 451600.7 65290.38 52834.57 70042.53 162012.4 175177.1 ## 2 1778568.9 1567038.1 1482796.38 1039129.82 1223132.35 1072037.7 1950287.5 ## 3 237993.6 269714.0 201393.42 150107.31 176989.65 156797.0 276541.8 ## wt16 wt18 wt19 wt21 wt22 isotopes ## 1 82619.48 46255.03 69198.22 153273.5 98144.28 ## 2 1466780.60 1572679.16 1275312.76 1356014.3 1231442.16 [1][M]+ ## 3 222366.15 211717.71 186850.88 188285.9 172348.76 [1][M+1]+ ## adduct pcgroup ## 1 165 ## 2 [M+Na]+ 182.007 5 ## 3 5 # Get final peaktable and store on harddrive # write.csv(getPeaklist(xsaFA),file=&quot;data/result_CAMERA.csv&quot;) Any steps after the annotation could be operated solo and you may not need the isotopes or adducts. You could also use annotateDiffreport to show the results as diffreport in xcms. # make a diffreport with CAMERA result and extract the fold change higher than 3 dreport &lt;- annotateDiffreport(xset3, fc_th = 3) ## Start grouping after retention time. ## Created 132 pseudospectra. ## Generating peak matrix! ## Run isotope peak annotation ## % finished: 10 20 30 40 50 60 70 80 90 100 ## Found isotopes: 68 ## Start grouping after correlation. ## Generating EIC&#39;s .. ## ## Calculating peak correlations in 34 Groups... ## % finished: 10 20 30 40 50 60 70 80 90 100 ## ## Calculating graph cross linking in 34 Groups... ## % finished: 10 20 30 40 50 60 70 80 90 100 ## New number of ps-groups: 156 ## xsAnnotate has now 156 groups, instead of 132 ## Generating peak matrix for peak annotation! ## ## Calculating possible adducts in 58 Groups... ## % finished: 10 20 30 # extract the p-value to caculate q-value qvalue &lt;- qvalue(p=dreport$pvalue) # add qvalue to reporttab dreport$qvalue &lt;- qvalue$qvalues # See the results # dreport[1:3,] # save on harddrive # write.csv(dreport,file=&#39;data/diffreport.csv&#39;) 9.7 Omics analysis Since we have got the annotations, Omics analysis could be performed. In xcms, the default database is metlin. You could directly get the link to certain compounds when you generate the differences report. # make a diffreport with CAMERA result and extract the fold change higher than 3, add the metlin links dreport &lt;- annotateDiffreport(xset3, fc_th = 3, metlin = T) ## Start grouping after retention time. ## Created 132 pseudospectra. ## Generating peak matrix! ## Run isotope peak annotation ## % finished: 10 20 30 40 50 60 70 80 90 100 ## Found isotopes: 68 ## Start grouping after correlation. ## Generating EIC&#39;s .. ## ## Calculating peak correlations in 34 Groups... ## % finished: 10 20 30 40 50 60 70 80 90 100 ## ## Calculating graph cross linking in 34 Groups... ## % finished: 10 20 30 40 50 60 70 80 90 100 ## New number of ps-groups: 156 ## xsAnnotate has now 156 groups, instead of 132 ## Generating peak matrix for peak annotation! ## ## Calculating possible adducts in 58 Groups... ## % finished: 10 20 30 # extract the p-value to caculate q-value qvalue &lt;- qvalue(p=dreport$pvalue) # add qvalue to reporttab dreport$qvalue &lt;- qvalue$qvalues # See the results dreport[1:3,] ## name fold tstat pvalue mzmed mzmin ## 300.2/3391 M300T3391 5.693594 -14.44368 5.026336e-08 300.1898 300.1706 ## 301.2/3391 M301T3391 6.283030 -15.52501 5.385022e-08 301.1879 301.1659 ## 298.2/3185 M298T3185 3.984984 -11.88773 3.615841e-07 298.1508 298.1054 ## mzmax rtmed rtmin rtmax npeaks KO WT ## 300.2/3391 300.2000 3390.699 3374.142 3398.743 12 6 6 ## 301.2/3391 301.1949 3391.126 3385.366 3394.937 7 6 1 ## 298.2/3185 298.1592 3185.221 3182.083 3190.163 4 4 0 ## metlin ## 300.2/3391 http://metlin.scripps.edu/metabo_list.php?mass_min=298.2&amp;mass_max=300.2 ## 301.2/3391 http://metlin.scripps.edu/metabo_list.php?mass_min=299.2&amp;mass_max=301.2 ## 298.2/3185 http://metlin.scripps.edu/metabo_list.php?mass_min=296.2&amp;mass_max=298.2 ## ko15 ko16 ko18 ## 300.2/3391 4534353.62273683 4980914.48421051 5290739.13866664 ## 301.2/3391 962353.429578945 1047934.14136842 1109303.04472222 ## 298.2/3185 180780.817277777 204134.864631578 191015.910842105 ## ko19 ko21 ko22 ## 300.2/3391 4564262.89684209 4733236.07999997 3931592.586 ## 301.2/3391 946943.392842103 984787.204999993 806171.472899999 ## 298.2/3185 190626.84952381 155276.902163857 220288.6218 ## wt15 wt16 wt18 ## 300.2/3391 349660.88536842 491793.181333331 645526.704947367 ## 301.2/3391 80639.2842881944 118940.899088542 134531.38671875 ## 298.2/3185 16448.4191894531 41050.0418122944 50082.5494449013 ## wt19 wt21 wt22 isotopes ## 300.2/3391 634108.848947367 1438254.44559999 1364627.844 [4][M]+ ## 301.2/3391 102784.647854275 203982.760512408 291392.971409092 [4][M+1]+ ## 298.2/3185 76704.8068359375 53957.7833573191 48363.333932977 ## adduct pcgroup qvalue ## 300.2/3391 17 1.087774e-05 ## 301.2/3391 17 1.087774e-05 ## 298.2/3185 103 4.869333e-05 # save on harddrive # write.csv(dreport,file=&#39;data/diffreport.csv&#39;) 9.8 MetaboAnalyst Actully, after you perform data correction, you have got the data matrix for statistic analysis. You might choose MetaboAnalyst online or offline to make furthor analysis, which supplied more statistical choices than xcms. The input data format for MetaboAnalyst should be rows for peaks and colomns for samples. You could also add groups infomation if possible. Use the following code to get the data for analysis. MAdata &lt;- groupval(xset3,method = &quot;medret&quot;, intensity = &quot;into&quot;) MAdata &lt;- rbind(group = as.character(phenoData(xset)$class),MAdata) # output the data for MetaboAnalyst # write.csv(MAdata, file = &quot;data/MAdata.csv&quot;) 9.9 Visulizing Peaks If you find some significant peaks, the best way to check them is data visulization. xcms supplies such functions. All you need are the retention time and ions’ range. eic &lt;- groups(xset3) index &lt;- which(eic[,&quot;rtmed&quot;] &gt; 2500 &amp; eic[,&quot;rtmed&quot;&lt;2600])[1] 9.10 Optimation of XCMS IPO package could be used to optimaze the parameters for XCMS. Try the following code. mzdatapath &lt;- system.file(&quot;cdf&quot;,package = &quot;faahKO&quot;) mzdatafiles &lt;- list.files(mzdatapath, recursive = TRUE, full.names=TRUE) library(IPO) peakpickingParameters &lt;- getDefaultXcmsSetStartingParams(&#39;matchedFilter&#39;) #setting levels for min_peakwidth to 10 and 20 (hence 15 is the center point) peakpickingParameters$min_peakwidth &lt;- c(10,20) peakpickingParameters$max_peakwidth &lt;- c(26,42) #setting only one value for ppm therefore this parameter is not optimized peakpickingParameters$ppm &lt;- 20 resultPeakpicking &lt;- optimizeXcmsSet(files = mzdatafiles[6:9], params = peakpickingParameters, nSlaves = 4, subdir = &#39;rsmDirectory&#39;) optimizedXcmsSetObject &lt;- resultPeakpicking$best_settings$xset retcorGroupParameters &lt;- getDefaultRetGroupStartingParams() retcorGroupParameters$profStep &lt;- 1 resultRetcorGroup &lt;- optimizeRetGroup(xset = optimizedXcmsSetObject, params = retcorGroupParameters, nSlaves = 4, subdir = &quot;rsmDirectory&quot;) writeRScript(resultPeakpicking$best_settings$parameters, resultRetcorGroup$best_settings, nSlaves=12) # https://github.com/rietho/IPO/blob/master/vignettes/IPO.Rmd 9.11 Summary This is the offline metaboliomics data process workflow. For each study, details would be different and F1 is always your best friend. Enjoy yourself in data mining! "]
]
